/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin:'application'
 
mainClassName = 'appMain.AppMain'
sourceCompatibility = 1.8
version = '1.0'
 
sourceSets {
  main {
    resources {
        srcDirs = ["src/main/java"]
        includes = ["**/*.fxml", "**/*.css"]
    }
  }
}

jar {
    manifest {
        attributes  'Title': 'SimpleMerge7', 'Version': version, 'Main-Class': mainClassName
    }
    archiveName 'SimpleMerge7.jar'
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'commons-io:commons-io:2.5'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    testImplementation 'org.easymock:easymock:3.6'
    testCompile(group: "org.testfx", name: "testfx-core", version: "4.0.13-alpha")
  	testCompile(group: "org.testfx", name: "testfx-junit", version: "4.0.13-alpha")
}

